createRatioPlot(2001, scale_greater15)
createRatioPlot(2002, scale_greater15)
createRatioPlot(2003, scale_greater15)
createRatioPlot(2004, scale_greater20)
createRatioPlot(2005, scale_greater20)
createRatioPlot(2006, scale_greater20)
createRatioPlot(2007, scale_greater20)
createRatioPlot(2008, scale_greater20)
createRatioPlot(2009, scale_greater20)
createRatioPlot(2010, scale_greater20)
createRatioPlot(2011, scale_greater20)
createRatioPlot(2012, scale_greater20)
createRatioPlot(2013, scale_greater20)
createRatioPlot(2014, scale_greater15)
createRatioPlot(2015, scale_greater15)
createRatioPlot(2016, scale_greater15)
createRatioPlot(2017, scale_greater15)
createRatioPlot(2018, scale_greater15)
# Plot Germany wide development over the years
gefordert <- calcPercantageGermany(bafog, studis)
print(gefordert)
plot(gefordert)
###############################################################################################################################################
# Calcs WS for given year
# e.g.: 1999 -> WS 1999/00
calcWS <- function(year) {
next_year <- as.POSIXlt(as.Date(paste(year, "/01/01", sep="")))
next_year$year <- next_year$year+1
next_year <- as.Date(next_year)
next_year <- substring(next_year,3,4)
semester <- paste("WS ", year, sep="")
semester <- paste(semester, next_year, sep="/")
return(semester)
}
###############################################################################################################################################
loadShapeGermany <- function() {
area <- readOGR("gadm36_DEU_1.shp", encoding = "UTF-8", use_iconv = TRUE) %>%
fortify() %>%
mutate(xMercator = mercator(cbind(long, lat))[,1],
yMercator = mercator(cbind(long, lat))[,2])
areanames <- readRDS("areanames.rds") # Label fuer die Gebiete laden
areanames <- areanames %>% select(NAME_1, CC_1) %>% filter(!duplicated(CC_1)) %>% mutate(id = as.character(as.integer(rownames(.)) - 1))
area2 <- left_join(area, areanames, by = "id")
return(area2)
}
###############################################################################################################################################
createRatioPlot <- function(year, colorscale) {
semester <- calcWS(year)
# filter by year
curr_bafog <- bafog %>% filter(Jahr == year)
curr_studis <- studis %>% filter(Jahr == semester)
# Join data
curr_area2 <- left_join(area2, curr_bafog, by = c("NAME_1" = "Bundesland"))
curr_area2 <- left_join(curr_area2, curr_studis, by = c("NAME_1" = "Bundesland"))
# Wertebereich für 1998 - 2019: 15 - 45%
# Bei 5er Schritten: 7 Farbwerte
x11()
autoplot(osmmap) +
geom_rect(mapping=aes(xmin=620000, xmax=Inf, ymin=5900000, ymax=Inf), fill="white", color="white", alpha=1) +
geom_polypath(aes(x = xMercator,
y = yMercator,
group = group,
fill = cut(x = gefordertePersonen/Studis*100, breaks= c(0, 10, 15, 20, 25, 30, 35, 40, 45, 50, 100), include.lowest = TRUE)
),
data = curr_area2,
color = "black",
size = 0.5,
alpha = 1,) +
labs(x = "", y = "", fill = "") + #, title = year
scale_fill_manual(values=colorscale)+
theme_void() +
theme(legend.position = "bottom")#legend.position="none")
}
###############################################################################################################################################
# Values for JS visualisation of Germany wide ratio development over the years
calcPercantageGermany <- function(bafog, studis) {
i <- 1
gefordert <- c()
for (year in c(1998:2018)) {
semester <- calcWS(year)
currStudis <- studis %>% filter(Jahr == semester)
currBafog <- bafog %>% filter(Jahr == year)
currPercentage <- (sum(currBafog$gefordertePersonen))/(sum(currStudis$Studis))
gefordert[i] <- currPercentage
i <- i + 1
}
return(gefordert)
}
###############################################################################################################################################
# Calcs WS for given year
# e.g.: 1999 -> WS 1999/00
calcWS <- function(year) {
next_year <- as.POSIXlt(as.Date(paste(year, "/01/01", sep="")))
next_year$year <- next_year$year+1
next_year <- as.Date(next_year)
next_year <- substring(next_year,3,4)
semester <- paste("WS ", year, sep="")
semester <- paste(semester, next_year, sep="/")
return(semester)
}
###############################################################################################################################################
loadShapeGermany <- function() {
area <- readOGR("gadm36_DEU_1.shp", encoding = "UTF-8", use_iconv = TRUE) %>%
fortify() %>%
mutate(xMercator = mercator(cbind(long, lat))[,1],
yMercator = mercator(cbind(long, lat))[,2])
areanames <- readRDS("areanames.rds") # Label fuer die Gebiete laden
areanames <- areanames %>% select(NAME_1, CC_1) %>% filter(!duplicated(CC_1)) %>% mutate(id = as.character(as.integer(rownames(.)) - 1))
area2 <- left_join(area, areanames, by = "id")
return(area2)
}
###############################################################################################################################################
createRatioPlot <- function(year, colorscale) {
semester <- calcWS(year)
# filter by year
curr_bafog <- bafog %>% filter(Jahr == year)
curr_studis <- studis %>% filter(Jahr == semester)
# Join data
curr_area2 <- left_join(area2, curr_bafog, by = c("NAME_1" = "Bundesland"))
curr_area2 <- left_join(curr_area2, curr_studis, by = c("NAME_1" = "Bundesland"))
# Wertebereich für 1998 - 2019: 15 - 45%
# Bei 5er Schritten: 7 Farbwerte
x11()
autoplot(osmmap) +
geom_rect(mapping=aes(xmin=620000, xmax=Inf, ymin=5900000, ymax=Inf), fill="white", color="white", alpha=1) +
geom_polypath(aes(x = xMercator,
y = yMercator,
group = group,
fill = cut(x = gefordertePersonen/Studis*100, breaks= c(0, 10, 15, 20, 25, 30, 35, 40, 45, 50, 100), include.lowest = TRUE)
),
data = curr_area2,
color = "black",
size = 0.5,
alpha = 1,) +
labs(x = "", y = "", fill = "") + #, title = year
scale_fill_manual(values=colorscale)+
theme_void() +
theme(legend.position = "bottom")#legend.position="none")
}
###############################################################################################################################################
# Values for JS visualisation of Germany wide ratio development over the years
calcPercantageGermany <- function(bafog, studis) {
i <- 1
gefordert <- c()
for (year in c(1998:2018)) {
semester <- calcWS(year)
currStudis <- studis %>% filter(Jahr == semester)
currBafog <- bafog %>% filter(Jahr == year)
currPercentage <- (sum(currBafog$gefordertePersonen))/(sum(currStudis$Studis))
gefordert[i] <- currPercentage
i <- i + 1
}
return(gefordert)
}
# Plots card containing the ratio of students receiving BAföG aid by state for a given year
# and also calculates its development over the years.
###############################################################################################################################################
######### Imports #########
setwd("C:/Users/user/Desktop/Daten/Klausurvorbereitung/Datenjournalismus_BAfoeG/data")
library(tidyverse)
library(RColorBrewer)
library(geosphere)
library(rgdal)
library(OpenStreetMap)
library(ggpolypath)
source(helpers.R)
###############################################################################################################################################
######### Data import + cleaning #########
bafog <- read_csv2("bafog.csv", skip = 7, n_max = 448, col_names = FALSE, locale = locale(encoding = "latin1"), na = c("."))  %>% select(Bundesland = X1, Jahr = X2, gefordertePersonen = X9, Vollforderung = X10, Monatsbestand = X12, Kosten = X13)
studis <- read_csv2("studis.csv", skip = 7, n_max = 343, col_names = FALSE, locale = locale(encoding = "latin1")) %>% select(Bundesland = X1, Jahr = X2, Studis = X5)
###############################################################################################################################################
######### Load map data #########
# Shape of Germany
area2 <- loadShapeGermany()
# Background map
osmmap <- openmap(upperLeft = c(55.154, 5.691), lowerRight = c(47.160, 15.095), zoom = 7,
type = "osm",
minNumTiles = 9L, mergeTiles = TRUE)
###############################################################################################################################################
######### Plots #########
# Plot Germany maps
scale_full <- c("#ffffff", "#E1F5FE", "#81D4FA", "#29B6F6", "#0288D1", "#0266b5", "#014880", "#00335c")
scale_greater15 <- scale_full[-1]
scale_greater20 <- scale_greater15[-1]
createRatioPlot(1998, scale_greater15)
createRatioPlot(1999, scale_greater15)
createRatioPlot(2000, scale_greater15)
createRatioPlot(2001, scale_greater15)
createRatioPlot(2002, scale_greater15)
createRatioPlot(2003, scale_greater15)
createRatioPlot(2004, scale_greater20)
createRatioPlot(2005, scale_greater20)
createRatioPlot(2006, scale_greater20)
createRatioPlot(2007, scale_greater20)
createRatioPlot(2008, scale_greater20)
createRatioPlot(2009, scale_greater20)
createRatioPlot(2010, scale_greater20)
createRatioPlot(2011, scale_greater20)
createRatioPlot(2012, scale_greater20)
createRatioPlot(2013, scale_greater20)
createRatioPlot(2014, scale_greater15)
createRatioPlot(2015, scale_greater15)
createRatioPlot(2016, scale_greater15)
createRatioPlot(2017, scale_greater15)
createRatioPlot(2018, scale_greater15)
# Plot Germany wide development over the years
gefordert <- calcPercantageGermany(bafog, studis)
print(gefordert)
plot(gefordert)
# Shape of Germany
area2 <- loadShapeGermany()
# Background map
osmmap <- openmap(upperLeft = c(55.154, 5.691), lowerRight = c(47.160, 15.095), zoom = 7,
type = "osm",
minNumTiles = 9L, mergeTiles = TRUE)
# Plots card containing the ratio of students receiving BAföG aid by state for a given year
# and also calculates its development over the years.
###############################################################################################################################################
######### Imports #########
setwd("C:/Users/user/Desktop/Daten/Klausurvorbereitung/Datenjournalismus_BAfoeG/data")
library(tidyverse)
library(RColorBrewer)
library(geosphere)
library(rgdal)
library(OpenStreetMap)
library(ggpolypath)
source(helpers.R)
# Plots card containing the ratio of students receiving BAföG aid by state for a given year
# and also calculates its development over the years.
###############################################################################################################################################
######### Imports #########
setwd("C:/Users/user/Desktop/Daten/Klausurvorbereitung/Datenjournalismus_BAfoeG/data")
library(tidyverse)
library(RColorBrewer)
library(geosphere)
library(rgdal)
library(OpenStreetMap)
library(ggpolypath)
source("../R/helpers.R")
install.packages("OpenStreetMap")
# Plots card containing the ratio of students receiving BAföG aid by state for a given year
# and also calculates its development over the years.
###############################################################################################################################################
######### Imports #########
setwd("C:/Users/user/Desktop/Daten/Klausurvorbereitung/Datenjournalismus_BAfoeG/data")
library(tidyverse)
library(RColorBrewer)
library(geosphere)
library(rgdal)
library(OpenStreetMap)
library(ggpolypath)
source("../R/helpers.R")
# Plots card containing the ratio of students receiving BAföG aid by state for a given year
# and also calculates its development over the years.
###############################################################################################################################################
######### Imports #########
setwd("C:/Users/user/Desktop/Daten/Klausurvorbereitung/Datenjournalismus_BAfoeG/data")
library(tidyverse)
library(RColorBrewer)
library(geosphere)
library(rgdal)
library(OpenStreetMap)
library(ggpolypath)
source("../R/helpers.R")
###############################################################################################################################################
######### Data import + cleaning #########
bafog <- read_csv2("bafog.csv", skip = 7, n_max = 448, col_names = FALSE, locale = locale(encoding = "latin1"), na = c("."))  %>% select(Bundesland = X1, Jahr = X2, gefordertePersonen = X9, Vollforderung = X10, Monatsbestand = X12, Kosten = X13)
studis <- read_csv2("studis.csv", skip = 7, n_max = 343, col_names = FALSE, locale = locale(encoding = "latin1")) %>% select(Bundesland = X1, Jahr = X2, Studis = X5)
###############################################################################################################################################
######### Load map data #########
# Shape of Germany
area2 <- loadShapeGermany()
# Background map
osmmap <- openmap(upperLeft = c(55.154, 5.691), lowerRight = c(47.160, 15.095), zoom = 7,
type = "osm",
minNumTiles = 9L, mergeTiles = TRUE)
###############################################################################################################################################
######### Plots #########
# Plot Germany maps
scale_full <- c("#ffffff", "#E1F5FE", "#81D4FA", "#29B6F6", "#0288D1", "#0266b5", "#014880", "#00335c")
scale_greater15 <- scale_full[-1]
scale_greater20 <- scale_greater15[-1]
createRatioPlot(1998, scale_greater15)
createRatioPlot(1999, scale_greater15)
createRatioPlot(2000, scale_greater15)
createRatioPlot(2001, scale_greater15)
createRatioPlot(2002, scale_greater15)
createRatioPlot(2003, scale_greater15)
createRatioPlot(2004, scale_greater20)
createRatioPlot(2005, scale_greater20)
createRatioPlot(2006, scale_greater20)
createRatioPlot(2007, scale_greater20)
createRatioPlot(2008, scale_greater20)
createRatioPlot(2009, scale_greater20)
createRatioPlot(2010, scale_greater20)
createRatioPlot(2011, scale_greater20)
createRatioPlot(2012, scale_greater20)
createRatioPlot(2013, scale_greater20)
createRatioPlot(2014, scale_greater15)
createRatioPlot(2015, scale_greater15)
createRatioPlot(2016, scale_greater15)
createRatioPlot(2017, scale_greater15)
createRatioPlot(2018, scale_greater15)
# Plot Germany wide development over the years
gefordert <- calcPercantageGermany(bafog, studis)
print(gefordert)
plot(gefordert)
calcWS(2000)
bafog <- read_csv2("bafog.csv", skip = 7, n_max = 448, col_names = FALSE, locale = locale(encoding = "latin1"), na = c("."))
view(bafog)
bafog <- read_csv2("bafog.csv", skip = 7, n_max = 448, col_names = FALSE, locale = locale(encoding = "latin1"), na = c(".")) %>% select(Bundesland = X1, Jahr = X2, gefordertePersonen = X9, Vollforderung = X10, Monatsbestand = X12, Kosten = X13)
view(bafog)
createRatioPlot(2015, scale_greater15)
createRatioPlot(1998, scale_greater15)
createRatioPlot(1998, scale_greater15)
createRatioPlot(1999, scale_greater15)
createRatioPlot(2010, scale_greater20)
calcWS(1998)
bafog %>% filter(Jahr == 1998)
year <- 1998
semester <- calcWS(year)
# filter by year
curr_bafog <- bafog %>% filter(Jahr == year)
curr_studis <- studis %>% filter(Jahr == semester)
# Join data
curr_area2 <- left_join(area2, curr_bafog, by = c("NAME_1" = "Bundesland"))
curr_area2 <- left_join(curr_area2, curr_studis, by = c("NAME_1" = "Bundesland"))
view(curr_area2)
year <- 1998
semester <- calcWS(year)
semester
currStudis <- studis %>% filter(Jahr == semester)
currBafog <- bafog %>% filter(Jahr == year)
currBafog
sum(currBafog$gefordertePersonen)
sum(currStudis$Studis
sum(currStudis$Studis)
(sum(currStudis$Studis))
currPercentage <- (sum(currBafog$gefordertePersonen))/(sum(currStudis$Studis))
currPercentage
gefordert <- calcPercantageGermany(bafog, studis)
print(gefordert)
plot(gefordert)
###############################################################################################################################################
######### Imports #########
setwd("C:/Users/user/Desktop/Daten/Klausurvorbereitung/Datenjournalismus_BAfoeG/data")
library(tidyverse)
library(rgdal)
source("../R/helpers.R")
bafog <- read_csv2("bafog.csv", skip = 7, n_max = 448, col_names = FALSE, locale = locale(encoding = "latin1"), na = c("."))  %>% select(Bundesland = X1, Jahr = X2, gefordertePersonen = X9, Vollforderung = X10, Monatsbestand = X12, Kosten = X13)
studis <- read_csv2("studis.csv", skip = 7, n_max = 343, col_names = FALSE, locale = locale(encoding = "latin1")) %>% select(Bundesland = X1, Jahr = X2, Studis = X5)
bafog
bafog18 <- bafog %>% filter(Jahr == 2018)
bafog18
print("Complete cost for student BAfÃ¶G in 2018 [in thousad?]")
sum(bafog18$Kosten)
print("Average monthly grant based on the average amount of monthly supported students")
sum(bafog18$Kosten) * 1000 / sum(bafog18$Monatsbestand) / 12
print("Average monthly grant based on total of supported students for that year")
sum(bafog18$Kosten) * 1000 / sum(bafog18$gefordertePersonen) / 12
###############################################################################################################################################
# Maximum grant
i <- 1
full <- c()
for (year in c(1998:2018)) {
semester <- calcWS(year)
currBafog <- bafog %>% filter(Jahr == year)
currPercentage <- ((sum(currBafog$Vollforderung)) / sum(currBafog$gefordertePersonen))
full[i] <- currPercentage
i <- i + 1
}
Jahr <- c(1998:2018)
full <- data.frame(Jahr, full)
x11()
ggplot(data=full, aes(x=Jahr, y=full)) +
geom_line(color="#03a9f4") +
scale_x_continuous(breaks = c(1998:2018))+
xlab("") + ylab("") + theme(text = element_text(size=16))
###############################################################################################################################################
# Maximum grant
i <- 1
full <- c()
for (year in c(1998:2018)) {
semester <- calcWS(year)
currBafog <- bafog %>% filter(Jahr == year)
currPercentage <- ((sum(currBafog$Vollforderung)) / sum(currBafog$gefordertePersonen))
full[i] <- currPercentage
i <- i + 1
}
Jahr <- c(1998:2018)
full <- data.frame(Jahr, full)
x11()
ggplot(data=full, aes(x=Jahr, y=full)) +
geom_line(color="#03a9f4") +
scale_x_continuous(breaks = c(1998:2018))+
xlab("") + ylab("") + theme(text = element_text(size=16))
# Gesamtausgaben
i <- 1
spent <- c()
for (year in c(1998:2018)) {
semester <- calcWS(year)
currBafog <- bafog %>% filter(Jahr == year)
spent[i] <- sum(currBafog$Kosten)
i <- i + 1
}
plot(spent)
# Average monthly bafog over time
i <- 1
mean_monthly <- c()
for (year in c(1998:2018)) {
semester <- calcWS(year)
currBafog <- bafog %>% filter(Jahr == year)
mean_monthly [i] <- sum(currBafog$Kosten) * 1000 / sum(currBafog$Monatsbestand) / 12
i <- i + 1
}
mean_monthly <- data.frame(mean_monthly, 1998:2018)
colnames(mean_monthly) <- c('year', 'mean')
x11()
ggplot(mean_monthly, aes(mean, year)) +
geom_line(color = "#03a9f4", size=2) +
scale_x_continuous(breaks = c(1998:2018)) +
theme(text = element_text(size=16)) +
xlab("") +
ylab("")
i <- 1
mean_monthly <- c()
for (year in c(1998:2018)) {
currBafog <- bafog %>% filter(Jahr == year)
mean_monthly[i] <- sum(currBafog$Kosten) * 1000 / sum(currBafog$Monatsbestand) / 12
i <- i + 1
}
i <- 1
mean_monthly <- c()
for (year in c(1998:2018)) {
currBafog <- bafog %>% filter(Jahr == year)
mean_monthly[i] <- sum(currBafog$Kosten) * 1000 / sum(currBafog$Monatsbestand) / 12
i <- i + 1
}
mean_monthly
mean_monthly <- data.frame(mean_monthly, 1998:2018)
mean_monthly
colnames(mean_monthly) <- c('year', 'mean')
colnames(mean_monthly)
mean_monthly
mean_monthly <- data.frame(mean_monthly, 1998:2018)
colnames(mean_monthly) <- c('mean','year')
mean_monthly
# Average monthly bafog over time
i <- 1
mean_monthly <- c()
for (year in c(1998:2018)) {
currBafog <- bafog %>% filter(Jahr == year)
mean_monthly[i] <- sum(currBafog$Kosten) * 1000 / sum(currBafog$Monatsbestand) / 12
i <- i + 1
}
mean_monthly <- data.frame(mean_monthly, 1998:2018)
colnames(mean_monthly) <- c('mean','year')
mean_monthly
x11()
ggplot(mean_monthly, aes(mean, year)) +
geom_line(color = "#03a9f4", size=2)
x11()
ggplot(mean_monthly, aes(year, mean)) +
geom_line(color = "#03a9f4", size=2)
x11()
ggplot(mean_monthly, aes(year, mean)) +
geom_line(color = "#03a9f4", size=2) +
scale_x_continuous(breaks = c(1998:2018)) +
theme(text = element_text(size=16)) +
xlab("") +
ylab("")
x11()
ggplot(mean_monthly, aes(year, mean)) +
geom_line(color = "#03a9f4", size=2) +
scale_x_continuous(breaks = c(1998:2018)) +
theme(text = element_text(size=16)) +
xlab("") +
ylab("")
# Entwicklung der deutschen Studierenden
i <- 1
de_studis <- c()
for (year in c(1998:2018)) {
semester <- calcWS(year)
currStudis <- studis %>% filter(Jahr == semester)
de_studis[i] <- sum(currStudis$Studis)
i <- i + 1
}
plot(de_studis)
# Entwicklung der deutschen Studierenden
i <- 1
de_studis <- c()
for (year in c(1998:2018)) {
semester <- calcWS(year)
currStudis <- studis %>% filter(Jahr == semester)
de_studis[i] <- sum(currStudis$Studis)
i <- i + 1
}
plot(de_studis)
x11()
ggplot(mean_monthly, aes(year, mean)) +
geom_line(color = "#03a9f4", size=2) +
scale_x_continuous(breaks = c(1998:2018)) +
theme(text = element_text(size=16)) +
xlab("") +
ylab("")
x11()
ggplot(mean_monthly, aes(year, mean)) +
geom_line(color = "#03a9f4", size=2) +
scale_x_continuous(breaks = c(1998:2018)) +
theme(text = element_text(size=16)) +
xlab("") +
ylab("")
