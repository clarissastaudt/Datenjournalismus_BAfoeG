summary(linearMod)
selectedMod <- step(linearMod)
summary(selectedMod)
selectedMod$anova
linearMod <- lm(Anteil_Bafog ~ Nettoeinkommen + Eltern + WG + Wohnheim + Privat + Akademiker, data=df_model_Bundesland)
summary(linearMod)
selectedMod <- step(linearMod)
summary(selectedMod)
selectedMod$anova
gvmodel <- gvlma(selectedMod)
plot(gvmodel)
plot(gvmodel)
x11()
plot(gvmodel)
cor(df_model_Bundesland$WG, df_model_Bundesland$Eltern)
linearMod <- lm(Anteil_Bafog ~ Nettoeinkommen + Eltern + Akademiker, data=df_model_Bundesland)
summary(linearMod)
linearMod <- lm(Anteil_Bafog ~ Nettoeinkommen + Eltern, data=df_model_Bundesland)
summary(linearMod)
linearMod <- lm(Anteil_Bafog ~ Nettoeinkommen + Eltern + Akademiker, data=df_model_Bundesland)
summary(linearMod)
confint(linearMod, conf.level = 0.95)
plot(linearMod)
linearMod <- lm(Anteil_Bafog ~ Nettoeinkommen + Eltern , data=df_model_Bundesland)
summary(linearMod)
plot(linearMod)
linearMod <- lm(Anteil_Bafog ~ Nettoeinkommen + Eltern + Akademiker , data=df_model_Bundesland)
summary(linearMod)
plot(linearMod)
df_model_Bundesland
view(df_model_Bundesland)
confint(linearMod, conf.level = 0.95)
linearMod <- lm(Anteil_Bafog ~ Nettoeinkommen + Eltern , data=df_model_Bundesland)
summary(linearMod)
plot(linearMod)
ggplot(data=df_model_Bundesland, aes(y=Anteil_Bafog, x=Nettoeinkommen)) + geom_point()
ggplot(data=df_model_Bundesland, aes(y=Anteil_Bafog, x=Eltern)) + geom_point()
ggplot(data=df_model_Bundesland, aes(y=Anteil_Bafog, x=WG)) + geom_point()
ggplot(data=df_model_Bundesland, aes(y=Anteil_Bafog, x=Wohnheim)) + geom_point()
ggplot(data=df_model_Bundesland, aes(y=Anteil_Bafog, x=Privat)) + geom_point()
ggplot(data=df_model_Bundesland, aes(y=Anteil_Bafog, x=Akademiker)) + geom_point()
linearMod <- lm(Anteil_Bafog ~ Nettoeinkommen + Eltern + WG + Wohnheim + Privat + Akademiker, data=df_model_Bundesland)
summary(linearMod)
selectedMod <- step(linearMod)
summary(selectedMod)
selectedMod$anova
gvmodel <- gvlma(selectedMod)
x11()
plot(gvmodel)
summary(gvmodel)
plot(gvmodel)
x11()
plot(gvmodel)
summary(gvmodel)
cor(df_model_Bundesland$WG, df_model_Bundesland$Eltern)
gvmodel <- gvlma(selectedMod)
x11()
plot(gvmodel)
summary(gvmodel)
summary(selectedMod)
cor(df_model_Bundesland$WG, df_model_Bundesland$Eltern)
linearMod <- lm(Anteil_Bafog ~ Nettoeinkommen + Eltern + Akademiker, data=df_model_Bundesland)
summary(linearMod)
linearMod <- lm(Anteil_Bafog ~ Nettoeinkommen + Eltern + Akademiker, data=df_model_Bundesland)
summary(linearMod)
plot(linearMod)
linearMod <- lm(Anteil_Bafog ~ Nettoeinkommen + Eltern + Akademiker, data=df_model_Bundesland)
summary(linearMod)
summary(selectedMod)
print("Gesamtausgaben Studierenden-BAföG 2018 [in Tsd. €]")
sum(bafog18$Kosten)
print("Durchschnittlicher monatlicher Förderbetrag nach Jahressumme")
sum(bafog18$Kosten) * 1000 / sum(bafog18$gefordertePersonen) / 12
i <- 1
full <- c()
for (year in c(1998:2018)) {
semester <- calcWS(year)
currBafog <- bafog %>% filter(Jahr == year)
currPercentage <- ((sum(currBafog$Vollforderung)) / sum(currBafog$gefordertePersonen))
full[i] <- currPercentage
i <- i + 1
}
Jahr <- c(1998:2018)
full <- data.frame(Jahr, full)
x11()
ggplot(data=full, aes(x=Jahr, y=voll)) +
geom_line(color="#03a9f4") +
scale_x_continuous(breaks = c(1998:2018))+
xlab("") + ylab("") + theme(text = element_text(size=16))
x11()
ggplot(data=full, aes(x=Jahr, y=full)) +
geom_line(color="#03a9f4") +
scale_x_continuous(breaks = c(1998:2018))+
xlab("") + ylab("") + theme(text = element_text(size=16))
library(tidyverse)
library(gridExtra)
ggplot2::mpg #engine size (displ) fuel efficiency (hwy)
## Einfacher Plot
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
## Einfacher Plot
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
# Facets und Plots kombinieren
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
mpg_dh <- ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
mpg_yh <- ggplot(data = mpg) +
geom_point(mapping = aes(x = year, y = hwy))
grid.arrange(mpg_dh, mpg_yh, nrow=2)
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, group = drv))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, linetype = drv))# +
#scale_linetype_manual(values=c("dotdash", "twodash", "dotted"))
ggplot(data = mpg) +
geom_smooth(
mapping = aes(x = displ, y = hwy, color = drv),
show.legend = FALSE
)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = drv)) +
geom_smooth(
mapping = aes(x = displ, y = hwy, color = drv),
show.legend = FALSE
)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color = class)) +
geom_smooth(data = filter(mpg, class == "subcompact"), se = FALSE)
diamonds
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop.., group = 1))
ggplot(data = diamonds) +
stat_summary(
mapping = aes(x = cut, y = depth),
fun.ymin = min,
fun.ymax = max,
fun.y = median
)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, colour = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "fill")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "dodge")
# boxplot
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
geom_boxplot()
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
geom_boxplot() +
coord_flip()
# Titel und Achsenbeschriftung
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = class)) +
geom_smooth(se = FALSE) +
labs(
title = "Fuel efficiency generally decreases with engine size",
subtitle = "Two seaters (sports cars) are an exception because of their light weight",
caption = "Data from fueleconomy.gov",
x = "Hubraum",
y = "Meilen pro Liter (Autobahn)"
)
best_in_class <- mpg %>%
group_by(class) %>%
filter(row_number(desc(hwy)) == 1)
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = class)) +
geom_point(size = 3, shape = 1, data = best_in_class) +
ggrepel::geom_label_repel(aes(label = model), data = best_in_class)
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
scale_y_continuous(breaks = seq(15, 40, by = 5))
base <- ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = class))
base + theme(legend.position = "left")
ggplot2::mpg #engine size (displ) fuel efficiency (hwy)
view(ggplot2::mpg)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), color = "red")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
mpg_dh <- ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
mpg_yh <- ggplot(data = mpg) +
geom_point(mapping = aes(x = year, y = hwy))
grid.arrange(mpg_dh, mpg_yh, nrow=2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
mpg_dh <- ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
mpg_yh <- ggplot(data = mpg) +
geom_point(mapping = aes(x = year, y = hwy))
grid.arrange(mpg_dh, mpg_yh, nrow=2)
mpg_dh <- ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
mpg_yh <- ggplot(data = mpg) +
geom_point(mapping = aes(x = year, y = hwy)) +
facet_wrap(~ class, nrow = 2)
grid.arrange(mpg_dh, mpg_yh, nrow=2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
?grid
mpg_dh <- ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
mpg_yh <- ggplot(data = mpg) +
geom_point(mapping = aes(x = year, y = hwy))
grid.arrange(mpg_dh, mpg_yh, nrow=2)
mpg_dh <- ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
mpg_yh <- ggplot(data = mpg) +
geom_point(mapping = aes(x = year, y = hwy)) +
facet_wrap(~ class, nrow = 2)
grid.arrange(mpg_dh, mpg_yh, nrow=2)
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, group = drv))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, linetype = drv))#
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, group = drv))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, linetype = drv))
ggplot(data = mpg) +
geom_smooth(
mapping = aes(x = displ, y = hwy, color = drv),
show.legend = FALSE
)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = drv)) +
geom_smooth(
mapping = aes(x = displ, y = hwy, color = drv),
show.legend = FALSE
)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color = class)) +
geom_smooth(data = filter(mpg, class == "subcompact"), se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color = class)) +
geom_smooth(data = filter(mpg, class == "subcompact"), se = FALSE)
#######
diamonds
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
view(diamonds)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop.., group = 1))
ggplot(data = diamonds) +
stat_summary(
mapping = aes(x = cut, y = depth),
fun.ymin = min,
fun.ymax = max,
fun.y = median
)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = ..prop.., group = 1))
ggplot(data = diamonds) +
stat_summary(
mapping = aes(x = cut, y = depth),
fun.ymin = min,
fun.ymax = max,
fun.y = median
)
?stat_summary
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, colour = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = cut))
?fun.ymin
ggplot(data = diamonds) +
stat_summary(
mapping = aes(x = cut, y = depth),
fun.ymin = min,
fun.ymax = max,
fun.y = median
)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, colour = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "fill")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "dodge")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "fill")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "dodge")
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
geom_boxplot()
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
geom_boxplot() +
coord_flip()
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
geom_boxplot()
ggplot(data = diamonds, mapping = aes(x = cut, y = clarity)) +
geom_boxplot()
ggplot(data = diamonds, mapping = aes(x = cut, y = price)) +
geom_boxplot()
ggplot(data = diamonds, mapping = aes(x = carat, y = price)) +
geom_boxplot()
ggplot(data = diamonds, mapping = aes(x = cut, y = price)) +
geom_boxplot()
ggplot(data = diamonds, mapping = aes(x = color, y = price)) +
geom_boxplot()
ggplot(data = diamonds, mapping = aes(x = clarity, y = price)) +
geom_boxplot()
ggplot(data = diamonds, mapping = aes(x = cut, y = depth)) +
geom_boxplot()
ggplot(data = diamonds, mapping = aes(x = cut, y = depth)) +
geom_boxplot() +
coord_flip()
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(color = class)) +
geom_smooth(se = FALSE) +
labs(
title = "Fuel efficiency generally decreases with engine size",
subtitle = "Two seaters (sports cars) are an exception because of their light weight",
caption = "Data from fueleconomy.gov",
x = "Hubraum",
y = "Meilen pro Liter (Autobahn)"
)
best_in_class <- mpg %>%
group_by(class) %>%
filter(row_number(desc(hwy)) == 1)
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = class)) +
geom_point(size = 3, shape = 1, data = best_in_class) +
ggrepel::geom_label_repel(aes(label = model), data = best_in_class)
best_in_class <- mpg %>%
group_by(class) %>%
filter(row_number(desc(hwy)) == 1)
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = class)) +
geom_point(size = 3, shape = 1, data = best_in_class) +
ggrepel::geom_label_repel(aes(label = model), data = best_in_class)
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
scale_y_continuous(breaks = seq(15, 40, by = 5))
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
scale_y_continuous(breaks = seq(15, 40, by = 5))
base <- ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = class))
base <- ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = class))
base + theme(legend.position = "left")
ggplot(mpg, aes(displ, hwy)) +
geom_point(aes(colour = class)) +
theme(legend.position = "left")
txhousing
ggplot(txhousing, aes(x = year, y=sales))
msleep
msleep
ggplot(msleep, aes(x=sleep_total))
msleep
ggplot(msleep, aes(x=sleep_total, y=genus))
ggplot(msleep, aes(x=sleep_total, y=awake))
msleep
ggplot(msleep, aes(x=sleep_total, y=order))
ggplot(msleep, aes(x=order, y=sleep_total))
presidential
ggplot( presidential, aes(x=party, y=start))
midwest
ggplot(midwest, aes(x = poptotal, y=popdensity))
ggplot(data = midwest) +
geom_point(mapping = aes(x = poptotal, y=popdensity))
ggplot(data = midwest) +
geom_point(mapping = aes(x = poptotal, y=popdensity, color=state))
ggplot(data = midwest) +
geom_point(mapping = aes(x = popwhite, y=popdensity, color=state))
ggplot(data = midwest) +
geom_point(mapping = aes(x = popwhite, y=popblack, color=state))
ggplot(data = midwest) +
geom_point(mapping = aes(x = poptotal, y=popdensity, color=state))
ggplot(data = midwest) +
geom_point(mapping = aes(x = poptotal, y=popdensity, color=state)) +
labs(title = "Bevölkerung von Counties im mittleren Westen", x="Gesamtbevölkerung", y="Bevölkerungsdichte")
ggplot(data = midwest) +
geom_point(mapping = aes(x = poptotal, y=popdensity, color=state)) +
labs(title = "Bevölkerung von Counties im mittleren Westen der USA", caption="Quelle: midwest Datenset, ggplot2", x="Gesamtbevölkerung", y="Bevölkerungsdichte")
ggplot(data = midwest) +
geom_point(mapping = aes(x = poptotal, y=popdensity, color=state)) +
labs(title = "Bevölkerung von Counties im mittleren Westen der USA", caption="Quelle: midwest Datenset, ggplot2", x="Gesamtbevölkerung", y="Bevölkerungsdichte") +
theme(legend.position = bottom)
ggplot(data = midwest) +
geom_point(mapping = aes(x = poptotal, y=popdensity, color=state)) +
labs(title = "Bevölkerung von Counties im mittleren Westen der USA", caption="Quelle: midwest Datenset, ggplot2", x="Gesamtbevölkerung", y="Bevölkerungsdichte") +
theme(legend.position = "bottom")
ggplot(data = midwest) +
geom_point(mapping = aes(x = poptotal, y=popdensity, color=state)) +
labs(title = "Bevölkerung von Counties im mittleren Westen der USA", caption="Quelle: midwest Datenset, ggplot2", x="Gesamtbevölkerung", y="Bevölkerungsdichte") +
theme(legend.position = "bottom") +
scale_x_continuous(breaks = seq(0, 2*e^3))
ggplot(data = midwest) +
geom_point(mapping = aes(x = poptotal, y=popdensity, color=state)) +
labs(title = "Bevölkerung von Counties im mittleren Westen der USA", caption="Quelle: midwest Datenset, ggplot2", x="Gesamtbevölkerung", y="Bevölkerungsdichte") +
theme(legend.position = "bottom") +
scale_x_continuous(breaks = seq(0, 10^2))
ggplot(data = midwest) +
geom_point(mapping = aes(x = poptotal, y=popdensity, color=state)) +
labs(title = "Bevölkerung von Counties im mittleren Westen der USA", caption="Quelle: midwest Datenset, ggplot2", x="Gesamtbevölkerung", y="Bevölkerungsdichte") +
theme(legend.position = "bottom") +
scale_x_continuous(breaks = seq(0, 10^9))
ggplot(data = midwest) +
geom_point(mapping = aes(x = poptotal, y=popdensity, color=state)) +
labs(title = "Bevölkerung von Counties im mittleren Westen der USA", caption="Quelle: midwest Datenset, ggplot2", x="Gesamtbevölkerung", y="Bevölkerungsdichte") +
theme(legend.position = "bottom") +
scale_x_continuous(breaks = seq(0, 10^9))
ggplot(data = midwest) +
geom_point(mapping = aes(x = poptotal, y=popdensity, color=state)) +
labs(title = "Bevölkerung von Counties im mittleren Westen der USA", caption="Quelle: midwest Datenset, ggplot2", x="Gesamtbevölkerung", y="Bevölkerungsdichte") +
theme(legend.position = "bottom")
ggplot(data = midwest) +
geom_point(mapping = aes(x = poptotal, y=popdensity, color=state)) +
labs(title = "Bevölkerung von Counties im mittleren Westen der USA", caption="Quelle: midwest Datenset, ggplot2", x="Gesamtbevölkerung", y="Bevölkerungsdichte") +
theme(legend.position = "bottom")
ggplot(data = midwest) +
geom_point(mapping = aes(x = poptotal, y=popdensity, color=state)) +
labs(title = "Bevölkerung von Counties im mittleren Westen der USA", subtitle="Quelle: midwest Datenset, ggplot2", x="Gesamtbevölkerung", y="Bevölkerungsdichte") +
theme(legend.position = "bottom")
ggplot(data = midwest) +
geom_point(mapping = aes(x = poptotal, y=popdensity), color=state) +
labs(title = "Bevölkerung von Counties im mittleren Westen der USA", subtitle="Quelle: midwest Datenset, ggplot2", x="Gesamtbevölkerung", y="Bevölkerungsdichte") +
theme(legend.position = "bottom")
ggplot(data = midwest) +
geom_point(mapping = aes(x = poptotal, y=popdensity)) +
labs(title = "Bevölkerung von Counties im mittleren Westen der USA", subtitle="Quelle: midwest Datenset, ggplot2", x="Gesamtbevölkerung", y="Bevölkerungsdichte") +
theme(legend.position = "bottom")
ggplot(data = midwest) +
geom_point(mapping = aes(x = poptotal, y=popdensity, color=state), color="blue") +
labs(title = "Bevölkerung von Counties im mittleren Westen der USA", captionn="Quelle: midwest Datenset, ggplot2", x="Gesamtbevölkerung", y="Bevölkerungsdichte") +
ggplot(data = midwest) +
geom_point(mapping = aes(x = poptotal, y=popdensity, color=state)) +
labs(title = "Bevölkerung von Counties im mittleren Westen der USA", captionn="Quelle: midwest Datenset, ggplot2", x="Gesamtbevölkerung", y="Bevölkerungsdichte") +
ggplot(data = midwest) +
geom_point(mapping = aes(x = poptotal, y=popdensity, color=state)) +
labs(title = "Bevölkerung von Counties im mittleren Westen der USA", caption="Quelle: midwest Datenset, ggplot2", x="Gesamtbevölkerung", y="Bevölkerungsdichte") +
theme(legend.position = "bottom")
ggplot(data = midwest) +
geom_point(mapping = aes(x = poptotal, y=popdensity, color=state)) +
labs(title = "Bevölkerung von Counties im mittleren Westen der USA", subtitle="Quelle: midwest Datenset, ggplot2", x="Gesamtbevölkerung", y="Bevölkerungsdichte") +
theme(legend.position = "bottom")
ggplot(data = midwest) +
geom_point(mapping = aes(x = poptotal, y=popdensity, color=state)) +
labs(title = "Bevölkerung von Counties im mittleren Westen der USA", subtitle="Quelle: midwest Datenset, ggplot2", x="Gesamtbevölkerung", y="Bevölkerungsdichte")
ggplot(data = midwest) +
geom_point(mapping = aes(x = poptotal, y=popdensity, color=state)) +
labs(title = "Bevölkerung von Counties im mittleren Westen der USA", subtitle="Quelle: midwest Datenset, ggplot2", x="Gesamtbevölkerung", y="Bevölkerungsdichte")
+ theme(legend = none)
ggplot(data = midwest) +
geom_point(mapping = aes(x = poptotal, y=popdensity, color=state)) +
labs(title = "Bevölkerung von Counties im mittleren Westen der USA", subtitle="Quelle: midwest Datenset, ggplot2", x="Gesamtbevölkerung", y="Bevölkerungsdichte")
+ theme(legend.position  = none)
ggplot(data = midwest) +
geom_point(mapping = aes(x = poptotal, y=popdensity, color=state)) +
labs(title = "Bevölkerung von Counties im mittleren Westen der USA", caption="Quelle: midwest Datenset, ggplot2", x="Gesamtbevölkerung", y="Bevölkerungsdichte")
view(diamonds)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color = class)) +
geom_smooth(data = filter(mpg, class == "subcompact"), se = FALSE)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(color = class)) +
geom_smooth(data = filter(mpg, class == "subcompact"))
ggplot(data = midwest) +
geom_point(mapping = aes(x = poptotal, y=popdensity, color=state)) +
labs(
title = "Bevölkerung von Counties im mittleren Westen der USA",
caption="Quelle: midwest Datenset, ggplot2",
x="Gesamtbevölkerung",
y="Bevölkerungsdichte") +
theme(legend.position = "bottom")
